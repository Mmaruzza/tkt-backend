{"version":3,"names":["MEETINGCONSTANTS","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","_WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","_Object$defineProperty","_Object$getOwnPropertyDescriptor","key","Object","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","valueOf","e","ReclaimHostEmptyWrongKeyError","_Error","_inherits2","_super","_this","message","length","undefined","ERROR_DICTIONARY","RECLAIM_HOST_ROLE_EMPTY_OR_WRONG_KEY","MESSAGE","error","_classCallCheck2","_defineProperty2","_assertThisInitialized2","Error","captureStackTrace","name","NAME","sdkMessage","code","CODE","_createClass2","_wrapNativeSuper2","exports","ReclaimHostNotSupportedError","_Error2","_super2","_this2","RECLAIM_HOST_ROLE_NOT_SUPPORTED","ReclaimHostNotAllowedError","_Error3","_super3","_this3","RECLAIM_HOST_ROLE_NOT_ALLOWED","ReclaimHostIsHostAlreadyError","_Error4","_super4","_this4","RECLAIM_HOST_ROLE_IS_ALREADY_HOST"],"sources":["reclaim-host-role-error.ts"],"sourcesContent":["import * as MEETINGCONSTANTS from '../../constants';\n\n/**\n * Extended Error object for reclaim host role empty or wrong key\n */\nexport class ReclaimHostEmptyWrongKeyError extends Error {\n  sdkMessage: string;\n  error: null;\n  code: number;\n\n  /**\n   *\n   * @constructor\n   * @param {String} [message]\n   * @param {Object} [error]\n   */\n  constructor(\n    message: string = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_EMPTY_OR_WRONG_KEY\n      .MESSAGE,\n    error: any = null\n  ) {\n    super(message);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ReclaimHostEmptyWrongKeyError);\n    }\n\n    this.name = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_EMPTY_OR_WRONG_KEY.NAME;\n    this.sdkMessage =\n      message || MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_EMPTY_OR_WRONG_KEY.MESSAGE;\n    this.error = error;\n\n    this.code = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_EMPTY_OR_WRONG_KEY.CODE;\n  }\n}\n\n/**\n * Extended Error object for reclaim host role not supported\n */\nexport class ReclaimHostNotSupportedError extends Error {\n  sdkMessage: string;\n  error: null;\n  code: number;\n\n  /**\n   *\n   * @constructor\n   * @param {String} [message]\n   * @param {Object} [error]\n   */\n  constructor(\n    message: string = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_SUPPORTED.MESSAGE,\n    error: any = null\n  ) {\n    super(message);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ReclaimHostNotSupportedError);\n    }\n\n    this.name = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_SUPPORTED.NAME;\n    this.sdkMessage =\n      message || MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_SUPPORTED.MESSAGE;\n    this.error = error;\n\n    this.code = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_SUPPORTED.CODE;\n  }\n}\n\n/**\n * Extended Error object for reclaim host role not allowed for other participants\n */\nexport class ReclaimHostNotAllowedError extends Error {\n  sdkMessage: string;\n  error: null;\n  code: number;\n\n  /**\n   *\n   * @constructor\n   * @param {String} [message]\n   * @param {Object} [error]\n   */\n  constructor(\n    message: string = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_ALLOWED.MESSAGE,\n    error: any = null\n  ) {\n    super(message);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ReclaimHostNotAllowedError);\n    }\n\n    this.name = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_ALLOWED.NAME;\n    this.sdkMessage =\n      message || MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_ALLOWED.MESSAGE;\n    this.error = error;\n\n    this.code = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_NOT_ALLOWED.CODE;\n  }\n}\n\n/**\n * Extended Error object for reclaim host role when user is host already\n */\nexport class ReclaimHostIsHostAlreadyError extends Error {\n  sdkMessage: string;\n  error: null;\n  code: number;\n\n  /**\n   *\n   * @constructor\n   * @param {String} [message]\n   * @param {Object} [error]\n   */\n  constructor(\n    message: string = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_IS_ALREADY_HOST.MESSAGE,\n    error: any = null\n  ) {\n    super(message);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ReclaimHostIsHostAlreadyError);\n    }\n\n    this.name = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_IS_ALREADY_HOST.NAME;\n    this.sdkMessage =\n      message || MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_IS_ALREADY_HOST.MESSAGE;\n    this.error = error;\n\n    this.code = MEETINGCONSTANTS.ERROR_DICTIONARY.RECLAIM_HOST_ROLE_IS_ALREADY_HOST.CODE;\n  }\n}\n"],"mappings":"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"}