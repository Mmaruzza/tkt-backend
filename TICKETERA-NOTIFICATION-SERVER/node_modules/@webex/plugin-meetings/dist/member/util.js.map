{"version":3,"names":["_constants","require","_parameter","_interopRequireDefault","MemberUtil","canReclaimHost","participant","ParameterError","canReclaimHostRole","isUser","type","_USER_","isModerator","moderator","isGuest","guest","isDevice","_RESOURCE_ROOM_","isModeratorAssignmentProhibited","moderatorAssignmentNotAllowed","isSame","id","person","isAssociatedSame","associatedUsers","some","user","isNotAdmitted","status","devices","intent","_WAIT_","_IN_LOBBY_","_IN_MEETING_","isAudioMuted","mutedStatus","isMuted","AUDIO_STATUS","controls","audio","muted","isVideoMuted","VIDEO_STATUS","isHandRaised","_participant$controls","_participant$controls2","hand","raised","accessor","_RECEIVE_ONLY_","_SEND_RECEIVE_","getRecordingMember","record","recording","meta","modifiedBy","isRecording","localRecord","isRemovable","isSelf","isInMeeting","_CALL_","isMutable","extractStatus","length","_NOT_IN_MEETING_","state","_JOINED_","_IDLE_","foundDevice","find","device","_OBSERVE_","_LEFT_","extractId","extractMediaStatus","audioStatus","video","videoStatus","extractName","name","_default","exports","default"],"sources":["util.ts"],"sourcesContent":["import {\n  _USER_,\n  _RESOURCE_ROOM_,\n  _OBSERVE_,\n  _WAIT_,\n  _LEFT_,\n  _JOINED_,\n  _IDLE_,\n  _IN_LOBBY_,\n  _NOT_IN_MEETING_,\n  _IN_MEETING_,\n  AUDIO_STATUS,\n  VIDEO_STATUS,\n  _SEND_RECEIVE_,\n  _RECEIVE_ONLY_,\n  _CALL_,\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\nimport {IMediaStatus} from './member.types';\n\nconst MemberUtil: any = {};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.canReclaimHost = (participant) => {\n  if (!participant) {\n    throw new ParameterError(\n      'canReclaimHostRole could not be processed, participant is undefined.'\n    );\n  }\n\n  return participant.canReclaimHostRole || false;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isUser = (participant: any) => participant && participant.type === _USER_;\n\nMemberUtil.isModerator = (participant) => participant && participant.moderator;\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isGuest = (participant: any) => participant && participant.guest;\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isDevice = (participant: any) => participant && participant.type === _RESOURCE_ROOM_;\n\nMemberUtil.isModeratorAssignmentProhibited = (participant) =>\n  participant && participant.moderatorAssignmentNotAllowed;\n\n/**\n * checks to see if the participant id is the same as the passed id\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\nMemberUtil.isSame = (participant: any, id: string) =>\n  participant && (participant.id === id || (participant.person && participant.person.id === id));\n\n/**\n * checks to see if the participant id is the same as the passed id for associated devices\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\nMemberUtil.isAssociatedSame = (participant: any, id: string) =>\n  participant &&\n  participant.associatedUsers &&\n  participant.associatedUsers.some(\n    (user) => user.id === id || (user.person && user.person.id === id)\n  );\n\n/**\n * @param {Object} participant the locus participant\n * @param {Boolean} isGuest\n * @param {String} status\n * @returns {Boolean}\n */\nMemberUtil.isNotAdmitted = (participant: any, isGuest: boolean, status: string): boolean =>\n  participant &&\n  participant.guest &&\n  ((participant.devices &&\n    participant.devices[0] &&\n    participant.devices[0].intent &&\n    participant.devices[0].intent.type === _WAIT_ &&\n    // @ts-ignore\n    isGuest &&\n    status === _IN_LOBBY_) ||\n    // @ts-ignore\n    !status === _IN_MEETING_);\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isAudioMuted = (participant: any) => {\n  if (!participant) {\n    throw new ParameterError('Audio could not be processed, participant is undefined.');\n  }\n  const mutedStatus = MemberUtil.isMuted(participant.status, AUDIO_STATUS);\n\n  if (participant.controls && participant.controls.audio) {\n    if (participant.controls.audio.muted) {\n      return true;\n    }\n    if (mutedStatus) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isVideoMuted = (participant: any) => {\n  if (!participant) {\n    throw new ParameterError('Video could not be processed, participant is undefined.');\n  }\n\n  return MemberUtil.isMuted(participant.status, VIDEO_STATUS);\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isHandRaised = (participant: any) => {\n  if (!participant) {\n    throw new ParameterError('Raise hand could not be processed, participant is undefined.');\n  }\n\n  return participant.controls?.hand?.raised || false;\n};\n\n/**\n * utility method for audio/video muted status\n * @param {String} status\n * @param {String} accessor\n * @returns {Boolean}\n */\nMemberUtil.isMuted = (status: string, accessor: string) => {\n  if (status) {\n    if (status[accessor] === _RECEIVE_ONLY_) {\n      return true;\n    }\n    if (status[accessor] === _SEND_RECEIVE_) {\n      return false;\n    }\n  }\n\n  return null;\n};\n\n/**\n * utility method for getting the recording member for later comparison\n * @param {Object} controls\n * @returns {String|null}\n */\nMemberUtil.getRecordingMember = (controls: any) => {\n  if (!controls) {\n    return null;\n  }\n  if (controls.record && controls.record.recording && controls.record.meta) {\n    return controls.record.meta.modifiedBy;\n  }\n\n  return null;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isRecording = (participant: any) => {\n  if (!participant) {\n    throw new ParameterError('Recording could not be processed, participant is undefined.');\n  }\n  if (participant.controls && participant.controls.localRecord) {\n    return participant.controls.localRecord.recording;\n  }\n\n  return false;\n};\n\nMemberUtil.isRemovable = (isSelf, isGuest, isInMeeting, type) => {\n  if (isGuest || isSelf) {\n    return false;\n  }\n  if (type === _CALL_) {\n    return false;\n  }\n  if (isInMeeting) {\n    return true;\n  }\n\n  return false;\n};\n\nMemberUtil.isMutable = (isSelf, isDevice, isInMeeting, isMuted, type) => {\n  if (!isInMeeting) {\n    return false;\n  }\n  if (isMuted) {\n    return false;\n  }\n  if (type === _CALL_) {\n    return false;\n  }\n  if (isSelf || isDevice) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractStatus = (participant: any) => {\n  if (!(participant && participant.devices && participant.devices.length)) {\n    return _NOT_IN_MEETING_;\n  }\n  if (participant.state === _JOINED_) {\n    return _IN_MEETING_;\n  }\n  if (participant.state === _IDLE_) {\n    if (participant.devices && participant.devices.length > 0) {\n      const foundDevice = participant.devices.find(\n        (device) =>\n          device.intent && (device.intent.type === _WAIT_ || device.intent.type === _OBSERVE_)\n      );\n\n      return foundDevice ? _IN_LOBBY_ : _NOT_IN_MEETING_;\n    }\n\n    return _NOT_IN_MEETING_;\n  }\n  if (participant.state === _LEFT_) {\n    return _NOT_IN_MEETING_;\n  }\n\n  return _NOT_IN_MEETING_;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractId = (participant: any) => {\n  if (participant) {\n    return participant.id;\n  }\n\n  return null;\n};\n\n/**\n * extracts the media status from nested participant object\n * @param {Object} participant the locus participant\n * @returns {Object}\n */\nMemberUtil.extractMediaStatus = (participant: any): IMediaStatus => {\n  if (!participant) {\n    throw new ParameterError('Media status could not be extracted, participant is undefined.');\n  }\n\n  return {\n    audio: participant.status.audioStatus,\n    video: participant.status.videoStatus,\n  };\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractName = (participant: any) => {\n  if (participant && participant.person) {\n    return participant.person.name;\n  }\n\n  return null;\n};\n\nexport default MemberUtil;\n"],"mappings":";;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAiBA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AAGA,IAAMG,UAAe,GAAG,CAAC,CAAC;;AAE1B;AACA;AACA;AACA;AACAA,UAAU,CAACC,cAAc,GAAG,UAACC,WAAW,EAAK;EAC3C,IAAI,CAACA,WAAW,EAAE;IAChB,MAAM,IAAIC,kBAAc,CACtB,sEAAsE,CACvE;EACH;EAEA,OAAOD,WAAW,CAACE,kBAAkB,IAAI,KAAK;AAChD,CAAC;;AAED;AACA;AACA;AACA;AACAJ,UAAU,CAACK,MAAM,GAAG,UAACH,WAAgB;EAAA,OAAKA,WAAW,IAAIA,WAAW,CAACI,IAAI,KAAKC,iBAAM;AAAA;AAEpFP,UAAU,CAACQ,WAAW,GAAG,UAACN,WAAW;EAAA,OAAKA,WAAW,IAAIA,WAAW,CAACO,SAAS;AAAA;;AAE9E;AACA;AACA;AACA;AACAT,UAAU,CAACU,OAAO,GAAG,UAACR,WAAgB;EAAA,OAAKA,WAAW,IAAIA,WAAW,CAACS,KAAK;AAAA;;AAE3E;AACA;AACA;AACA;AACAX,UAAU,CAACY,QAAQ,GAAG,UAACV,WAAgB;EAAA,OAAKA,WAAW,IAAIA,WAAW,CAACI,IAAI,KAAKO,0BAAe;AAAA;AAE/Fb,UAAU,CAACc,+BAA+B,GAAG,UAACZ,WAAW;EAAA,OACvDA,WAAW,IAAIA,WAAW,CAACa,6BAA6B;AAAA;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,UAAU,CAACgB,MAAM,GAAG,UAACd,WAAgB,EAAEe,EAAU;EAAA,OAC/Cf,WAAW,KAAKA,WAAW,CAACe,EAAE,KAAKA,EAAE,IAAKf,WAAW,CAACgB,MAAM,IAAIhB,WAAW,CAACgB,MAAM,CAACD,EAAE,KAAKA,EAAG,CAAC;AAAA;;AAEhG;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,UAAU,CAACmB,gBAAgB,GAAG,UAACjB,WAAgB,EAAEe,EAAU;EAAA,OACzDf,WAAW,IACXA,WAAW,CAACkB,eAAe,IAC3BlB,WAAW,CAACkB,eAAe,CAACC,IAAI,CAC9B,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,IAAKK,IAAI,CAACJ,MAAM,IAAII,IAAI,CAACJ,MAAM,CAACD,EAAE,KAAKA,EAAG;EAAA,EACnE;AAAA;;AAEH;AACA;AACA;AACA;AACA;AACA;AACAjB,UAAU,CAACuB,aAAa,GAAG,UAACrB,WAAgB,EAAEQ,OAAgB,EAAEc,MAAc;EAAA,OAC5EtB,WAAW,IACXA,WAAW,CAACS,KAAK,KACfT,WAAW,CAACuB,OAAO,IACnBvB,WAAW,CAACuB,OAAO,CAAC,CAAC,CAAC,IACtBvB,WAAW,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,IAC7BxB,WAAW,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAACpB,IAAI,KAAKqB,iBAAM;EAC7C;EACAjB,OAAO,IACPc,MAAM,KAAKI,qBAAU;EACrB;EACA,CAACJ,MAAM,KAAKK,uBAAY,CAAC;AAAA;;AAE7B;AACA;AACA;AACA;AACA7B,UAAU,CAAC8B,YAAY,GAAG,UAAC5B,WAAgB,EAAK;EAC9C,IAAI,CAACA,WAAW,EAAE;IAChB,MAAM,IAAIC,kBAAc,CAAC,yDAAyD,CAAC;EACrF;EACA,IAAM4B,WAAW,GAAG/B,UAAU,CAACgC,OAAO,CAAC9B,WAAW,CAACsB,MAAM,EAAES,uBAAY,CAAC;EAExE,IAAI/B,WAAW,CAACgC,QAAQ,IAAIhC,WAAW,CAACgC,QAAQ,CAACC,KAAK,EAAE;IACtD,IAAIjC,WAAW,CAACgC,QAAQ,CAACC,KAAK,CAACC,KAAK,EAAE;MACpC,OAAO,IAAI;IACb;IACA,IAAIL,WAAW,EAAE;MACf,OAAO,IAAI;IACb;EACF;EAEA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA/B,UAAU,CAACqC,YAAY,GAAG,UAACnC,WAAgB,EAAK;EAC9C,IAAI,CAACA,WAAW,EAAE;IAChB,MAAM,IAAIC,kBAAc,CAAC,yDAAyD,CAAC;EACrF;EAEA,OAAOH,UAAU,CAACgC,OAAO,CAAC9B,WAAW,CAACsB,MAAM,EAAEc,uBAAY,CAAC;AAC7D,CAAC;;AAED;AACA;AACA;AACA;AACAtC,UAAU,CAACuC,YAAY,GAAG,UAACrC,WAAgB,EAAK;EAAA,IAAAsC,qBAAA,EAAAC,sBAAA;EAC9C,IAAI,CAACvC,WAAW,EAAE;IAChB,MAAM,IAAIC,kBAAc,CAAC,8DAA8D,CAAC;EAC1F;EAEA,OAAO,EAAAqC,qBAAA,GAAAtC,WAAW,CAACgC,QAAQ,cAAAM,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBE,IAAI,cAAAD,sBAAA,uBAA1BA,sBAAA,CAA4BE,MAAM,KAAI,KAAK;AACpD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA3C,UAAU,CAACgC,OAAO,GAAG,UAACR,MAAc,EAAEoB,QAAgB,EAAK;EACzD,IAAIpB,MAAM,EAAE;IACV,IAAIA,MAAM,CAACoB,QAAQ,CAAC,KAAKC,yBAAc,EAAE;MACvC,OAAO,IAAI;IACb;IACA,IAAIrB,MAAM,CAACoB,QAAQ,CAAC,KAAKE,yBAAc,EAAE;MACvC,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA9C,UAAU,CAAC+C,kBAAkB,GAAG,UAACb,QAAa,EAAK;EACjD,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EACA,IAAIA,QAAQ,CAACc,MAAM,IAAId,QAAQ,CAACc,MAAM,CAACC,SAAS,IAAIf,QAAQ,CAACc,MAAM,CAACE,IAAI,EAAE;IACxE,OAAOhB,QAAQ,CAACc,MAAM,CAACE,IAAI,CAACC,UAAU;EACxC;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACAnD,UAAU,CAACoD,WAAW,GAAG,UAAClD,WAAgB,EAAK;EAC7C,IAAI,CAACA,WAAW,EAAE;IAChB,MAAM,IAAIC,kBAAc,CAAC,6DAA6D,CAAC;EACzF;EACA,IAAID,WAAW,CAACgC,QAAQ,IAAIhC,WAAW,CAACgC,QAAQ,CAACmB,WAAW,EAAE;IAC5D,OAAOnD,WAAW,CAACgC,QAAQ,CAACmB,WAAW,CAACJ,SAAS;EACnD;EAEA,OAAO,KAAK;AACd,CAAC;AAEDjD,UAAU,CAACsD,WAAW,GAAG,UAACC,MAAM,EAAE7C,OAAO,EAAE8C,WAAW,EAAElD,IAAI,EAAK;EAC/D,IAAII,OAAO,IAAI6C,MAAM,EAAE;IACrB,OAAO,KAAK;EACd;EACA,IAAIjD,IAAI,KAAKmD,iBAAM,EAAE;IACnB,OAAO,KAAK;EACd;EACA,IAAID,WAAW,EAAE;IACf,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd,CAAC;AAEDxD,UAAU,CAAC0D,SAAS,GAAG,UAACH,MAAM,EAAE3C,QAAQ,EAAE4C,WAAW,EAAExB,OAAO,EAAE1B,IAAI,EAAK;EACvE,IAAI,CAACkD,WAAW,EAAE;IAChB,OAAO,KAAK;EACd;EACA,IAAIxB,OAAO,EAAE;IACX,OAAO,KAAK;EACd;EACA,IAAI1B,IAAI,KAAKmD,iBAAM,EAAE;IACnB,OAAO,KAAK;EACd;EACA,IAAIF,MAAM,IAAI3C,QAAQ,EAAE;IACtB,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACAZ,UAAU,CAAC2D,aAAa,GAAG,UAACzD,WAAgB,EAAK;EAC/C,IAAI,EAAEA,WAAW,IAAIA,WAAW,CAACuB,OAAO,IAAIvB,WAAW,CAACuB,OAAO,CAACmC,MAAM,CAAC,EAAE;IACvE,OAAOC,2BAAgB;EACzB;EACA,IAAI3D,WAAW,CAAC4D,KAAK,KAAKC,mBAAQ,EAAE;IAClC,OAAOlC,uBAAY;EACrB;EACA,IAAI3B,WAAW,CAAC4D,KAAK,KAAKE,iBAAM,EAAE;IAChC,IAAI9D,WAAW,CAACuB,OAAO,IAAIvB,WAAW,CAACuB,OAAO,CAACmC,MAAM,GAAG,CAAC,EAAE;MACzD,IAAMK,WAAW,GAAG/D,WAAW,CAACuB,OAAO,CAACyC,IAAI,CAC1C,UAACC,MAAM;QAAA,OACLA,MAAM,CAACzC,MAAM,KAAKyC,MAAM,CAACzC,MAAM,CAACpB,IAAI,KAAKqB,iBAAM,IAAIwC,MAAM,CAACzC,MAAM,CAACpB,IAAI,KAAK8D,oBAAS,CAAC;MAAA,EACvF;MAED,OAAOH,WAAW,GAAGrC,qBAAU,GAAGiC,2BAAgB;IACpD;IAEA,OAAOA,2BAAgB;EACzB;EACA,IAAI3D,WAAW,CAAC4D,KAAK,KAAKO,iBAAM,EAAE;IAChC,OAAOR,2BAAgB;EACzB;EAEA,OAAOA,2BAAgB;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA7D,UAAU,CAACsE,SAAS,GAAG,UAACpE,WAAgB,EAAK;EAC3C,IAAIA,WAAW,EAAE;IACf,OAAOA,WAAW,CAACe,EAAE;EACvB;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAjB,UAAU,CAACuE,kBAAkB,GAAG,UAACrE,WAAgB,EAAmB;EAClE,IAAI,CAACA,WAAW,EAAE;IAChB,MAAM,IAAIC,kBAAc,CAAC,gEAAgE,CAAC;EAC5F;EAEA,OAAO;IACLgC,KAAK,EAAEjC,WAAW,CAACsB,MAAM,CAACgD,WAAW;IACrCC,KAAK,EAAEvE,WAAW,CAACsB,MAAM,CAACkD;EAC5B,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA1E,UAAU,CAAC2E,WAAW,GAAG,UAACzE,WAAgB,EAAK;EAC7C,IAAIA,WAAW,IAAIA,WAAW,CAACgB,MAAM,EAAE;IACrC,OAAOhB,WAAW,CAACgB,MAAM,CAAC0D,IAAI;EAChC;EAEA,OAAO,IAAI;AACb,CAAC;AAAC,IAAAC,QAAA,GAEa7E,UAAU;AAAA8E,OAAA,CAAAC,OAAA,GAAAF,QAAA"}